name: Deploy


on:
  workflow_dispatch:
    inputs:
      environment_name:
        required: true
        type: string
      run_id:
        required: true
        type: string

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment_name }}

    defaults:
      run:
        shell: bash
        working-directory: IaC

    env:
      TF_CLOUD_ORGANIZATION: ${{vars.TF_CLOUD_ORGANIZATION}}
      TF_WORKSPACE: ${{vars.TF_WORKSPACE}}

    steps:
      - name: Download IaC Artifact
        id: download-iac-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build.yml
          run_id: ${{ inputs.run_id }}
          name: iac

      - name: Download FunctionApp Artifact
        id: download-functionapp-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build.yml
          run_id: ${{ inputs.run_id }}
          name: functionapp
          skip_unpack: true

      - name: Setup Terraform
        id: terraform-setup
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        id: terraform-init
        run: terraform init

      - name: Terraform Apply
        id: terraform-apply
        run: terraform apply -auto-approve -input=false

      - name: Azure Login
        id: az-login
        uses: Azure/login@v1.4.6
        with:
          client-id: ${{ fromJson(steps.terraform-output.outputs.stdout).github_client_id.value }}
          tenant-id: ${{ fromJson(steps.terraform-output.outputs.stdout).tenant_id.value }}
          subscription-id: ${{ fromJson(steps.terraform-output.outputs.stdout).subscription_id.value }}

      - name: Deply Azure Function
        id: deply-azure-function
        uses: azure/CLI@v1
        env:
          RG: ${{ fromJson(steps.terraform-output.outputs.stdout).resource_group_name.value }}
          AF: ${{ fromJson(steps.terraform-output.outputs.stdout).functionapp_name.value }}
        with:
          inlineScript: |
            az functionapp config appsettings set -g $RG -n $AF --settings "WEBSITE_RUN_FROM_PACKAGE=1" --output none
            az functionapp deployment source config-zip -g $RG -n $AF --src "Infrastructure/Portal SharePoint Integration/portal-api.zip" -t 180
            az functionapp restart -g $RG -n $AF